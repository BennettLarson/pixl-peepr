{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","currentId","setCurrentId","className","style","color","textAlign","margin","href","method","onSubmit","e","preventDefault","Number","target","elements","tokenId","value","type","name","placeholder","Button","onClick","display","src","Pixls","ipfsUrl","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAyEeA,MAlEf,WAAgB,IAAD,EACqBC,mBAAS,GAD9B,mBACNC,EADM,KACKC,EADL,KAoCb,OACE,sBAAKC,UAAU,MAAf,UACE,oBAAIC,MAAO,CAACC,MAAO,QAASC,UAAW,SAAUC,OAAQ,GAAzD,0DACA,qBAAIH,MAAO,CAACC,MAAO,QAASC,UAAW,SAAUC,OAAQ,GAAzD,oBAAoE,mBAAGC,KAAK,iCAAR,4CAApE,uBACA,yBAAQL,UAAU,aAAlB,UACE,uBAAMM,OAAO,OAAOC,SAV1B,SAAgBC,GACdA,EAAEC,iBACFV,EAAaW,OAAOF,EAAEG,OAAOC,SAASC,QAAQC,SAQ1C,UACE,gCACE,uBAAOC,KAAK,SAASC,KAAK,UAAUC,YAAY,qBAElD,uBAAOF,KAAK,SAASD,MAAM,cAE7B,qBAAKd,UAAU,YAAf,SACE,cAACkB,EAAA,EAAD,CAAQC,QAjChB,WAEIpB,EADgB,IAAdD,EAdM,KAiBKA,EAAY,IA6BrB,oBAEF,gCACE,8BACE,oBAAGG,MAAO,CAACG,OAAQ,EAAGgB,QAAS,gBAA/B,cAAkDtB,OAIpD,qBAAKuB,IAAKC,EAAMxB,GAAWyB,QAASvB,UAAU,WAAWwB,IAAI,YAE/D,qBAAKxB,UAAU,aAAf,SACE,cAACkB,EAAA,EAAD,CAAQC,QApChB,WAEIpB,EAvBQ,OAsBND,EACW,EAEAA,EAAY,IAgCrB,2BCtDK2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.141e9114.chunk.js","sourcesContent":["import Pixls from './pixls.json';\nimport './App.css';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from 'react';\n// import axios from 'axios';\n\nfunction App() {\n  const [currentId, setCurrentId] = useState(0);\n  var maxId = 8618\n\n\n  // useEffect(async () => {\n  //   const result = await axios(\n  //     'https://hn.algolia.com/api/v1/search?query=redux',\n  //   );\n \n  //   setData(result.data);\n  // });\n\n  // var openSea = \"https://opensea.io/assets/0x082903f4e94c5e10a2b116a4284940a36afaed63/\" + currentId;\n\n  function back() {\n    if (currentId === 0) {\n      setCurrentId(maxId);\n    } else {\n      setCurrentId(currentId - 1);\n    }\n  }\n\n  function next() {\n    if (currentId === maxId) {\n      setCurrentId(0);\n    } else {\n      setCurrentId(currentId + 1);\n    }\n  }\n\n  function search(e) {\n    e.preventDefault();\n    setCurrentId(Number(e.target.elements.tokenId.value));\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 style={{color: 'white', textAlign: 'center', margin: 0}}>NOTE: THESE ARE NOT THE FINAL PIXLS ASSIGNED</h1>\n      <h3 style={{color: 'white', textAlign: 'center', margin: 0}}>Got to <a href=\"https://www.getpixls.com/about\">https://www.getpixls.com/about</a> for more details</h3>\n      <header className=\"App-header\">\n        <form method=\"post\" onSubmit={search}>\n          <label>\n            <input type=\"number\" name=\"tokenId\" placeholder=\"Enter token ID\" />\n          </label>\n          <input type=\"submit\" value=\"Search\" />\n        </form>\n        <div className=\"leftArrow\">\n          <Button onClick={back}>Back</Button>\n        </div>\n        <div>\n          <div>\n            <p style={{margin: 0, display: 'inline-block'}}>#{currentId}</p>\n            {/* <a className=\"openSeaLink\" href={{openSea}}>View on OpenSea.io</a> */}\n            {/* <p>{Pixls[currentId].ipfsUrl}</p> */}\n          </div>\n          <img src={Pixls[currentId].ipfsUrl} className=\"App-logo\" alt=\"logo\" />\n        </div>\n        <div className=\"rightArrow\">\n          <Button onClick={next}>Next</Button>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}